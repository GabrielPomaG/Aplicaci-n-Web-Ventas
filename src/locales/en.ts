
export const en = {
  SITE_TITLE: "Wanka's Smart Food Shopping",
  nav: {
    home: 'Home',
    products: 'Products',
    myPantry: 'My Pantry',
    cart: 'Cart',
    profile: 'Profile',
    login: 'Login',
    register: 'Register',
    logout: 'Logout',
  },
  buttons: {
    addToCart: "Add to Cart",
    proceedToCheckout: "Proceed to Checkout",
    placeOrder: "Create Order",
    startShopping: "Start Shopping",
    getRecipeSuggestions: "Suggest Recipes",
    startOver: "Start Over",
    backToIdentified: "Back to Identified Items",
    addMissingToCart: "Add to Cart",
    startNewPantryCheck: "Start New Pantry Check",
    goToCart: "Go to Cart",
    backToRecipes: "Back to Recipes",
    editProfile: "Edit Profile (Coming Soon)",
    viewOrders: "View Orders",
    clearCart: "Clear Cart",
    login: "Login",
    register: "Register",
    logout: "Logout",
    addMoreToCart: "Add More",
  },
  home: {
    welcome: "Welcome to Wanka's",
    tagline: "Your smart companion for delicious meals and effortless shopping. Discover fresh ingredients, get recipe ideas, and manage your pantry like a pro.",
    browseProducts: "Browse Products",
    smartPantry: "Smart Pantry",
    keyFeatures: "Key Features",
    everythingYouNeed: "Everything You Need for Smart Cooking",
    featuresTagline: "From finding the freshest ingredients to discovering your next favorite meal, Wanka's makes food simple and enjoyable.",
    featureVastCatalogTitle: "Vast Product Catalog",
    featureVastCatalogDesc: "Explore a wide variety of fresh produce, pantry staples, and specialty items. Find everything you need in one place.",
    featureAIFoodIdentifierTitle: "AI Food Identifier",
    featureAIFoodIdentifierDesc: "Snap a photo of your ingredients, and our AI will identify them, helping you discover recipes and manage your pantry.",
    featureRecipeSuggestionsTitle: "Recipe Suggestions",
    featureRecipeSuggestionsDesc: "Get personalized recipe ideas based on the items you have. Never wonder what to cook again!",
    promoImageAlt: "Wanka's logo and brand promotional image",
  },
  footer: {
    rightsReserved: "All rights reserved.",
    builtWith: "Built with",
  },
  common: {
    loading: "Loading...",
    error: "Error",
    tryAgain: "Try Again",
    noItems: "No items",
    or: "or",
    quantity: "Quantity",
    subtotal: "Subtotal",
    total: "Total",
    items: "items",
    item: "item",
    success: "Success",
    remove: "Remove",
    increaseQuantity: "Increase quantity",
    decreaseQuantity: "Decrease quantity",
    quantityFor: "Quantity for {itemName}",
    removeLabel: "Remove {itemName} from cart",
    productImageAlt: "{itemName} image",
    language: "Language",
    english: "English",
    spanish: "Español",
    currencySymbol: "$",
  },
  productPage: {
    title: "Our Products",
    tagline: "Find the freshest ingredients for your next meal.",
    searchPlaceholder: "Search products...",
    filterByCategory: "Filter by category",
    allCategories: "All Categories",
    sortBy: "Sort by",
    sortNameAsc: "Name (A-Z)",
    sortNameDesc: "Name (Z-A)",
    sortPriceAsc: "Price (Low to High)",
    sortPriceDesc: "Price (High to Low)",
    noProductsFound: "No Products Found",
    noProductsHint: "Try adjusting your search or filter criteria.",
    outOfStock: "Out of stock",
    onlyLeft: "Only {stock} left!",
    ariaLabelAddToCart: "Add {productName} to cart",
  },
  cartPage: {
    emptyTitle: "Your Cart is Empty",
    emptyTagline: "Looks like you haven't added anything to your cart yet.",
    yourCart: "Your Shopping Cart: {itemCount}",
    orderSummary: "Order Summary",
    shipping: "Shipping",
    shippingPickup: "Free - Store Pickup",
  },
  checkoutPage: {
    title: "Confirm Order",
    tagline: "Finalize your order and schedule store pickup.",
    loadingUser: "Loading user information...",
    redirectToLogin: "Redirecting to login...",
    cartEmptyRedirect: "Your cart is empty. Redirecting...",
    missingInfoTitle: "Missing Information",
    missingInfoDesc: "Please select a store and a pickup time slot.",
    orderPlacedTitle: "Order Placed Successfully!",
    orderPlacedDesc: "Your order has been confirmed. Thank you for shopping with Wanka's!",
    storeSelectionTitle: "Select Pickup Location",
    storeSelectionDesc: "Choose a store for your order pickup.",
    storeLabel: "Store",
    storePlaceholder: "Select a store location",
    pickupTimeLabel: "Pickup Time Slot",
    paymentInfoTitle: "Create Order",
    paymentInfoDesc: "Your order will be prepared for pickup at the selected store. Payment is due at the time of collection.",
    pickupAndPayInfo: "You will pick up your order at the selected store and pay at the time of collection. No online payment is required now.",
    processing: "Processing...",
    userNotAuthenticated: "User not authenticated. Please log in.",
    supabaseNotAvailable: "Database service is currently unavailable. Please try again later.",
    orderErrorTitle: "Order Placement Error",
    orderErrorPrefix: "Could not save order:",
    orderErrorDefault: "Failed to save order to the database. This might be due to a connection issue or permission problem. Please try again.",
    orderItemsErrorPrefix: "Could not save order items:",
    orderItemsErrorDefault: "Failed to save items for the order. Please try again.",
    orderErrorFallback: "An unexpected error occurred while placing your order. Please try again.",
    orderErrorRLSDefault: "Failed to save order. This may be due to data validation or database permission issues. Please check logs or contact support.",
    orderItemsErrorRLSDefault: "Failed to save order items. This may be due to data validation or database permission issues. Please check logs or contact support.",
    orderErrorFKeyUser: "Failed to save order. User ID for the order is invalid or not recognized by the database. (Possible Foreign Key issue. Ensure the user profile exists and is correctly linked.)",
    orderErrorFKeyLocation: "Failed to save order. The selected store location is invalid. (Foreign Key Violation: `orders_location_id_fkey`)",
    orderItemsErrorFKeyProduct: "Failed to save some items in the order. An invalid product was detected. (Foreign Key Violation: `order_items_product_id_fkey`)",
    orderItemsErrorFKeyOrder: "Failed to save order items. The parent order ID is invalid. (Foreign Key Violation: `order_items_order_id_fkey`)",
    invalidTimeSlot: "The selected time slot is invalid or could not be processed.",
    orderErrorRLSStrict: "Could not save order. This may be due to database security policies or permission issues. Please check logs or contact support.",
    orderItemsErrorRLSStrict: "Could not save order items. This may be due to database security policies or permission issues for the associated order. Please check logs or contact support."
  },
  loginForm: {
    title: "Login",
    description: "Access your Wanka's account.",
    emailLabel: "Email",
    emailPlaceholder: "you@example.com",
    passwordLabel: "Password",
    passwordPlaceholder: "••••••••",
    loginButton: "Login",
    loggingIn: "Logging in...",
    noAccount: "Don't have an account?",
    registerHere: "Register here",
    loginSuccess: "Login Successful",
    welcomeBack: "Welcome back!",
    loginFailedTitle: "Login Failed",
    loginFailedDesc: "Invalid email or password. Please try again.",
    emailNotFound: "This legacy account does not have a password. Please contact support or create a new account.",
    fetchProfileError: "Error fetching your profile information. Please try again."
  },
  registerForm: {
    title: "Register",
    description: "Create your Wanka's account to get started.",
    nameLabel: "Full Name",
    namePlaceholder: "John Doe",
    confirmPasswordLabel: "Confirm Password",
    registerButton: "Register",
    creatingAccount: "Creating Account...",
    haveAccount: "Already have an account?",
    loginHere: "Login here",
    passwordMismatch: "Passwords do not match.",
    registrationSuccessTitle: "Registration Successful!",
    registrationSuccessDesc: "Your profile has been created. Welcome to Wanka's!",
    dbErrorTitle: "Registration Error",
    dbErrorPrefix: "Could not save profile:",
    dbErrorDefault: "Could not create account. Please try again.",
    dbErrorRLSDefault: "Could not save profile. This may be due to data validation or database permission issues (e.g., RLS). Please ensure RLS policies allow this operation.",
    dbErrorRLSStrict: "Could not save profile. This is likely due to database security policies (RLS) or other database constraints. For this operation to succeed, a fully authenticated session matching the RLS rules is typically required.",
    dbErrorForeignKeyViolationProfiles: "Could not save profile. The ID must correspond to an existing user in 'auth.users' table due to a database foreign key constraint (profiles_id_fkey). This usually requires full Supabase Auth integration where user creation in 'auth.users' precedes profile creation.",
    dbErrorEmailTaken: "This email address is already registered. Please try logging in or use a different email.",
  },
  myPantryPage: {
    title: "My Smart Pantry",
    tagline: "Let AI help you with your groceries and meal planning!",
    uploadTitle: "Upload Food Images",
    uploadDescription: "Upload images of your ingredients, and we'll help you figure out what to cook!",
    identifiedTitle: "Identified Food Items",
    identifiedDescription: "Here's what we found in your images. Ready to find some recipes?",
    itemsFoundMsg: "{count} items found.",
    noItemsIdentifiedTitle: "No Food Items Identified",
    noItemsIdentifiedDesc: "Could not identify any food items in the images. Try others or ensure they are clear!",
    noItemsForRecipe: "Please identify some food items first.",
    recipesSuggestedTitle: "Recipes Suggested!",
    recipesFoundMsg: "{count} recipes found.",
    noRecipesFoundTitle: "No Recipes Found",
    noRecipesFoundDesc: "Could not find recipes for the identified items. Try with other ingredients!",
    recipeSuggestionsTitle: "Recipe Suggestions",
    recipeSuggestionsDesc: "Based on your items, here are some recipe ideas. Select one to see its details.",
    fetchingMissingIngredients: "Fetching missing ingredients...",
    missingIngredientsIdentifiedMsg: "{count} missing ingredients for {recipeName} found in catalog.",
    allSetTitle: "You're all set!",
    allSetDesc: "Time to get cooking!",
    productNotFoundTitle: "Product Not Found",
    productNotFoundDesc: "Could not find \"{ingredientName}\" in our catalog.",
    addedToCartTitle: "Added to cart",
    addedToCartDesc: "\"{productName}\" was added to your cart.",
    removedFromCartTitle: "Removed from cart",
    removedFromCartDesc: "Item was removed from your cart.",
    cartClearedTitle: "Cart cleared",
    cartClearedDesc: "Your shopping cart has been emptied.",
    generatingRecipeImage: "Generating recipe image...",
    recipeImageFor: "Image for: {recipeName}",
    errorGeneratingRecipeImage: "Error generating recipe image.",
    imageUploader: {
      uploadErrorTooLarge: "File is too large. Max {maxSize}MB allowed.",
      uploadErrorInvalidType: "Invalid file type. Please upload an image.",
      processingError: "Failed to process images.",
      blockedError: "Identification request was blocked, possibly due to safety policies. Try different images.",
      noImageError: "Please select or capture at least one image to upload.",
      clickToUpload: "Click to upload",
      dragAndDrop: "or drag and drop",
      imageFormatHint: "PNG, JPG, GIF up to {maxSize}MB",
      maxFilesHint: "Maximum {maxFiles} images.",
      maxFilesError: "You have reached the limit of {maxFiles} images.",
      identifyButton: "Identify Food Items",
      removeImageLabel: "Remove image",
      identifyingText: "Identifying food items...",
      uploadImageLabel: "Upload image(s)",
      imagePreviewAlt: "Image preview",
      imagePreviewTitle: "Uploaded Images",
      openCamera: "Use Camera",
      closeCamera: "Close Camera",
      capturePhoto: "Capture Photo",
      cameraErrorTitle: "Camera Error",
      cameraAccessDenied: "Could not access camera. Please check permissions in your browser.",
      clearAll: "Clear All"
    },
    recipeDetailsDesc: "Here are the details to prepare {recipeName}. You can also see if you're missing any ingredients.",
    ingredientsListTitle: "Ingredients:",
    preparationStepsTitle: "Preparation:",
    missingIngredientsTitleShort: "Suggested Missing Ingredients:",
    fetchingRecipes: "Fetching recipes...",
    noMissingIngredientsInStock: "Some missing ingredients might not be available in our catalog or the AI didn't specify them correctly.",
    unavailableIngredientsNote: "Note: The following AI-suggested ingredients were not found in our catalog or are not purchasable items",
    productCatalogError: "Could not load the product catalog. Please try again later.",
    pantryRecipeSuggestionError: "Error suggesting recipes. Please try again.",
    pantryMissingIngredientsError: "Error finding missing ingredients. Please try again.",
    scaleRecipeServingsLabel: "Scale recipe for",
    servingsLabel: "servings",
    originalServingsLabel: "original",
    forServingsLabel: "for {count} servings",
    productNotInCatalog: "Ingredient '{ingredientName}' was not found in the catalog.",
    availableIngredientsTitle: "Available Ingredients (in your pantry):",
    availableIngredientsDesc: "If you want to buy more of what you already have, you can add it here.",
    missingLabel: "missing",
  },
  profilePage: {
    title: "Your Profile",
    tagline: "Manage your account details and view your order history.",
    loadingProfile: "Loading profile...",
    userAvatarAlt: "{userName} Avatar",
    valuedCustomer: "Valued Customer",
    accountInfo: "Account Information",
    nameLabel: "Name:",
    emailLabel: "Email:",
    memberSinceLabel: "Member Since:",
    notSet: "Not set",
    orderHistory: "Order History",
    noPastOrders: "You have no past orders.",
    noPastOrdersHint: "Your placed orders will appear here. Time to shop!",
    startShoppingLink: "Start Shopping",
    orderPlacedToastTitle: "Order Placed!",
    orderPlacedToastDesc: "Your order was successfully placed. Check your order history below.",
    phoneNumberLabel: "Phone:",
    loadingOrders: "Loading your orders...",
    errorLoadingOrders: "Could not load your order history. Please try again later.",
    orderIdLabel: "Order #",
    orderIdLabelNumber: "Order #", 
    placedOnLabel: "Placed on:",
    statusLabel: "Status:",
    statusUnknown: "Unknown",
    statusPending: "Pending",
    statusCompleted: "Completed",
    statusCancelled: "Cancelled",
    statusDelivered: "Delivered",
    statusProcessing: "Processing",
    statusFailed: "Failed",
    pickupLocationLabel: "Pickup Location",
    locationNotAvailable: "Location not available",
    pickupDateLabel: "Pickup Date/Time",
    dateNotAvailable: "Date not available",
    viewOrderItemsLabel: "View Items",
    noItemsInOrder: "No items found in this order.",
    notesLabel: "Order Notes",
    genericDbError: "A database error occurred. Please try again or contact support.",
    boletaFeatureTitle: "Generate Receipt (Coming Soon)",
    boletaFeatureDesc: "PDF receipt generation is not yet implemented.",
    generateBoletaButton: "Generate Receipt (PDF)",
    generatingBoletaButton: "Generating PDF...",
    boletaGeneratedTitle: "Receipt Generated",
    boletaGeneratedDesc: "Your PDF receipt has been downloaded.",
    boletaGenerationError: "Could not generate PDF receipt. Please try again.",
    boletaTitle: "Electronic Sales Receipt",
    boletaUnitPrice: "Unit Price",
    boletaStatusNotPaid: "NOT PAID",
    boletaFooterThanks: "Thank you for your purchase!",
    boletaFooterDisclaimer: "This is an electronic sales voucher.",
    orderItemsTitle: "Order Detail:",
    cancelOrderButton: "Cancel Order",
    cancellingOrderButton: "Cancelling...",
    orderCancelledTitle: "Order Cancelled",
    orderCancelledDesc: "The order has been marked as cancelled.",
    orderCancellationFailedDesc: "Could not cancel the order. It might no longer be pending or you may not have permission.",
    userNotAuthenticatedToCancel: "You must be authenticated to cancel an order.",
    boletaOnlineTagline: "ONLINE SUPERMARKET",
    boletaPickupTag: "Web purchase - Store pickup",
    boletaStoreName: "WANKA'S",
    boletaStoreRUC: "20123456789",
    boletaStorePhone: "(01) 234-5678",
    boletaStoreEmail: "info@wankas.com.pe",
    boletaOrderTitle: "PURCHASE ORDER",
    boletaOrderNumLabel: "N°:",
    boletaStatusPendingPay: "Pending Payment",
    boletaDateLabel: "Date",
    boletaTimeLabel: "Time",
    boletaClientDetailsTitle: "CLIENT DETAILS",
    boletaClientNameLabel: "Name",
    boletaClientEmailLabel: "Email",
    boletaClientPhoneLabel: "Phone",
    boletaClientNamePlaceholder: "Valued Customer",
    boletaClientEmailPlaceholder: "Not available",
    boletaClientPhonePlaceholder: "Not available",
    boletaPickupLocationTitle: "PICKUP LOCATION",
    boletaStoreLabel: "Store",
    boletaAddressLabel: "Address",
    boletaPickupDateShortLabel: "Pickup Date/Time",
    boletaPickupAddressPlaceholder: "Store Address Not Available",
    boletaQtyHeader: "Qty.",
    boletaDescHeader: "Description",
    boletaTotalToPayLabel: "TOTAL TO PAY",
  },
  storeSelector: {
    loadingStores: "Loading store locations...",
    operatingHoursLabel: "Operating Hours: {hours}",
    noAvailableTimeSlots: "No time slots available for the selected store.",
    slotsForTomorrow: "Note: These time slots are for tomorrow.",
    slotsForMonday: "Note: These time slots are for next Monday."
  }
};

export type Translations = typeof en;
